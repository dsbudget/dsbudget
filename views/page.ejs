<% include head.ejs %>
<% include navbar.ejs %>
<script>
var dsApp = angular.module('dsApp', ['ngRoute', 'ui.bootstrap', 'angularFileUpload']);

dsApp.directive('format', ['$filter', function ($filter) {
    return {
        require: '?ngModel',
        link: function (scope, elem, attrs, ctrl) {
            if (!ctrl) return;
            ctrl.$formatters.unshift(function (a) {
            return $filter(attrs.format)(ctrl.$modelValue)
            });
            ctrl.$parsers.unshift(function (viewValue) {
                elem.priceFormat({
                    prefix: '',
                    centsSeparator: ',',
                    thousandsSeparator: '.'
                });                
                return elem[0].value;
            });
        }
    };
}]);

dsApp.config(['$routeProvider', function($routeProvider) {
    $routeProvider.
    when('/', {
        templateUrl: '/public/page-list.html',
        controller: 'PageListCtrl'
    }).
    when('/:id', {
        templateUrl: '/public/page-detail.html',
        controller: 'PageDetailCtrl'
    }).
    otherwise({
        redirectTo: '/'
    });
}]);

function ImportCtrl($scope, $modalInstance, doc) {
    $scope.doc = doc;
    $scope.docid = doc._id;
    $scope.importtypes = [
        {name: "dsbudget"}
    ];
    $scope.importtype = $scope.importtypes[0]; //setting it to "dsbudget" won't work for some reason
    $scope.fd = 2;

    $scope.file = null;
    $scope.onFileSelect = function($files) {
        $scope.file = $files[0];
    };

    $scope.ok = function() {
        $modalInstance.close($scope);
    };

    $scope.cancel = function () {
        $modalInstance.dismiss('cancel');
    };
};
ImportCtrl.$inject = ['$scope', '$modalInstance', 'doc'];

dsApp.controller('PageListCtrl', ['$scope', '$http', '$modal', '$upload', 
function($scope, $http, $modal, $upload) {
    $scope.loadpages = function(){
        $http.get('/page/list').success(function(docs) {
            $scope.docs = docs;
        });
    };
    $scope.loadpages();

    $scope.orderProp = '-end_date';
    $scope.openimport = function(doc) {
        var modal = $modal.open({
            templateUrl: 'importdialog.html',
            controller: ImportCtrl,
            resolve: {
                doc: function() {
                    return doc;
                }
            }
        });
        modal.result.then(function(scope) {
            $upload.upload({
                url: '/import/dsbudget', 
                data: {
                    docid: scope.docid,
                    importtype: scope.importtype.name,
                    fd: scope.fd }, 
                file: scope.file,
            }).progress(function(evt) {
                console.log('percent: ' + parseInt(100.0 * evt.loaded / evt.total));
            }).success(function(data, status, headers, config) {
                $scope.loadpages();
            }).error(function(data, status, headers, config) {
                alert('Oops.. Something went wrong! Please refer to dsBudget support forum.');
            });
        });
    };
}]);

function ExpenseCtrl($scope, $modalInstance, category, expense) {
    $scope.category = category;
    $scope.expense = expense;

    if(!$scope.expense) {
        $scope._new = true;
        $scope.expense = {
            time: new Date().getTime()
        };
    }

    $scope.opendatepicker = function($event) {
        $event.preventDefault();
        $event.stopPropagation();
        $scope.dpopen = true;
    };

    $scope.ok = function() {
        $modalInstance.close($scope);
    };

    $scope.cancel = function () {
        $modalInstance.dismiss('cancel');
    };
};
ExpenseCtrl.$inject = ['$scope', '$modalInstance', 'category', 'expense'];

function IncomeCtrl($scope, $modalInstance, page, income) {
    $scope.page = page;
    $scope.income = income;

    if(!$scope.income) {
        $scope._new = true;
        $scope.income = {page_id: page._id};
    }

    $scope.opendatepicker = function($event) {
        $event.preventDefault();
        $event.stopPropagation();
        $scope.dpopen = true;
    };

    $scope.ok = function() {
        $modalInstance.close($scope);
    };

    $scope.cancel = function () {
        $modalInstance.dismiss('cancel');
    };
};
IncomeCtrl.$inject = ['$scope', '$modalInstance', 'page', 'income'];

dsApp.controller('PageDetailCtrl', ['$scope', '$http', '$modal', '$routeParams', 
function($scope, $http, $modal, $routeParams) {
    $http.get('/page/detail', {params: {id: $routeParams.id}}).success(function(page) {
        //console.dir(page);
        $scope.page = page;
        $scope.incomes = page.incomes;
        $scope.categories = page.categories;
        update();
    });

    //parse color like #ff1122, and return resaturated value
    function lightcolor(color) {
        var r = parseInt(color.substring(1,3), 16);
        var g = parseInt(color.substring(3,5), 16);
        var b = parseInt(color.substring(5,7), 16);
        //console.log(color + " to " + r + "/" + g + "/" + b);

        r = Math.floor((256+r)/2);
        g = Math.floor((256+g)/2);
        b = Math.floor((256+b)/2);

        var hr = r.toString(16);
        var hg = g.toString(16);
        var hb = b.toString(16);
        if (hr.length == 1) hr = '0' + hr;
        if (hg.length == 1) hg = '0' + hg;
        if (hb.length == 1) hb = '0' + hb;
        var c = '#' + hr + hg + hb;
        //console.log(color + " to " + c);
        return '#' + hr + hg + hb;
    }

    //recompute various derived values
    function update() {
        var total_income = 0;
        $scope.incomes.forEach(function(income) {
            total_income += income.amount;
        });
        $scope._total_income = total_income;

        $scope.categories.forEach(function(category) {
            var remaining = category.budget;
            if(category.expenses) {
                category.expenses.forEach(function(expense) {
                    /* this is for category!! not for expense
                    if(expense.is_amount_per) {
                        remaining-=(expense.amount*category.budget)
                    } else {
                        remaining-=expense.amount;
                    }
                    */
                    //console.dir(expense);
                    remaining-=expense.amount;
                });
            }
            category.style = {"background-color": lightcolor(category.color)};
            category._remaining = remaining; //set to scope
        });
    }

    $scope.openexpense = function(category, expense, eid) {
        var modal = $modal.open({
            templateUrl: 'expensedialog.html',
            controller: ExpenseCtrl,
            resolve: {
                category: function() { return category; },
                expense: function() { return angular.copy(expense); } //send copy instead of the actual $scope.expense
            }
        });
        modal.result.then(function(scope) {
            //scope.expense.time = parseInt(scope.expense.time);
            //scope.expense.amount = parseFloat(scope.expense.amount);

            $http.post('/expense', {
                catid: scope.category._id,
                expense: scope.expense,
                eid: eid
            }).success(function() {
                if(eid != undefined) {
                    category.expenses[eid] = scope.expense;
                } else {
                    category.expenses.push(scope.expense);
                }
                update();
            }).error(function(data, status, headers, config) {
                alert('Oops.. Something went wrong! Please refer to dsBudget support forum.');
                console.error(data);
            });
        });
    };
    $scope.openincome = function(page, income, iid) {
        var modal = $modal.open({
            templateUrl: 'incomedialog.html',
            controller: IncomeCtrl,
            resolve: {
                page: function() { return page; },
                income: function() { return angular.copy(income); } //send copy instead of the actual $scope object
            }
        });
        modal.result.then(function(scope) {
            //I am not sure why I have to do this for income but not expense..
            scope.income.amount = parseFloat(scope.income.amount);

            $http.post('/income', {
                income: scope.income
            }).success(function() {
                if(iid != undefined) {
                    page.incomes[iid] = scope.income;
                } else {
                    page.incomes.push(scope.income);
                }
                update();
            }).error(function(data, status, headers, config) {
                alert('Oops.. Something went wrong! Please refer to dsBudget support forum.');
                console.error(data);
            });
        });
    };
}]);

</script>
<div class="container" ng-app="dsApp">
    <div ng-view></div>
    <% include footer.ejs %>
</div>
<% include tail.ejs %>
